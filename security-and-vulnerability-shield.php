<?php

/*
Plugin Name: Security and Vulnerability Shield
Plugin URI: http://sitecops.com/
Description: This plugin will allow you to scan your plugins for known/public/zero-day vulnerabilities. No need to read thousand emails and sites so that you can have the needed information when new vulnerabilities are found, <strong>just click "Scan" (WP Admin -> Plugins)</strong> and you will get that information in the WordPress's UI immediately. All scans/magic/voodoo is done on our servers, so the plugin <strong>WOULD NEVER slow down your site</strong> or get it banned by your hosting provider.
Version: 2.2
Author: SiteCops
Author URI: http://sitecops.com/
License: GPLv2 or later (http://www.gnu.org/licenses/gpl-2.0.html)
*/

require_once 'plugin_info.php';
require_once 'utils.php';

function svs_sitecops_scan_my_plugins()
{
    $plugins = array();

    $allPlugins = apply_filters('all_plugins', get_plugins());

    $wpOrgPluginInfo = get_site_transient('update_plugins');

    foreach ($allPlugins as $path => $plugin) {
        if (isset($wpOrgPluginInfo->no_update) && isset($wpOrgPluginInfo->no_update[$path])) {
            $name = $wpOrgPluginInfo->no_update[$path]->slug;
        } else {
            $name = sanitize_title($plugin['Title']);
        }

        $plugins[$name] = array(
            'a' => is_plugin_active($path) ? 1 : 0,
            'v' => $plugin['Version'],
        );
    }

    global $wp_version;

    $meta = array(
        'wp' => $wp_version,
        'plugin' => '2.2',
        'os' => PHP_OS,
        'php' => PHP_VERSION,
        'plugins' => $plugins,
    );

    $meta_str = json_encode($meta);

    // SEND API request
    $r = svs_sitecops_api_request(
        'scan',
        array(
            'plugins' => $meta_str,
        ),
        true
    );

    $result = array(
        'request' => $meta,
        'response' => @json_decode($r['body']),
        'last_updated' => time(),
    );

    if ($result['response']) {
        if ( ! $result['response']->error) {
            update_option('sitecops_plugins_scan_result', $result);
        }
    }

    return $result;
}

function svs_sitecops_api_request($endpoint, $data, $blocking = false)
{
    $data['site_id'] = svs_sitecops_generate_site_id();
    $data['site_url'] = get_site_url();
    $data['secret'] = svs_sitecops_generate_site_secret();
    $data['reply_url'] = plugins_url('rpc.php', __FILE__);

    return wp_remote_post(
        'http://sitecops.com/api/' . $endpoint,
        array(
            'headers' => array(
                'User-agent' => 'security-and-vulnerability-shield / 2.2',
            ),
            'blocking' => $blocking,
            'body' => $data,
        )
    );
}

function svs_sitecops_generate_site_id()
{
    //$site_id = get_site_id();
    return 0; /* currently disabled */
}

function svs_sitecops_generate_site_secret()
{
    $secret = md5($k = svs_sitecops_generate_site_id() . get_site_url() . __FILE__ . SECURE_AUTH_SALT);

    return $secret;
}

function svs_sitecops_plugin_js($hook)
{
    if ($hook === 'plugins.php') {
        wp_enqueue_script($scriptId = 'sitecops-security-and-vulnerability-shield', plugin_dir_url(__FILE__) . '/security-and-vulnerability-shield.js');

        $plugin_data = get_option('sitecops_plugins_scan_result');
        if ( ! $plugin_data) {
            $plugin_data = svs_sitecops_scan_my_plugins();
        }
        $plugin_data['ctime'] = time();
        $plugin_data['last_updated_datestr'] = date_i18n(get_option('date_format'), $plugin_data['last_updated'], true) . ' ' .
                                               date_i18n(get_option('time_format'), $plugin_data['last_updated'], true) . ' (GMT)';

        wp_localize_script($scriptId, 'siteCopsAjax',
            array(
                'ajax_url' => admin_url('admin-ajax.php'),
                'ajax_nonce' => wp_create_nonce('sitecops-security-and-vulnerability-shield'),
                'plugin_data' => $plugin_data,
            )
        );

        wp_register_style('sitecops-security-and-vulnerability-shield-css', plugin_dir_url(__FILE__) . '/security-and-vulnerability-shield.css', false, '2.2');
        wp_enqueue_style('sitecops-security-and-vulnerability-shield-css');
    }
}

add_action('admin_enqueue_scripts', 'svs_sitecops_plugin_js');

function svs_sitecops_xhr_scan_plugins_callback()
{
    $nonce = @$_POST['_wpnonce_name'];
    if (empty($_POST) || ! wp_verify_nonce($nonce, 'sitecops-security-and-vulnerability-shield')) {
        die('invalid nonce!');
    }

    $response = svs_sitecops_scan_my_plugins();

    wp_send_json($response);

    wp_die(); // this is required to terminate immediately and return a proper response
}

add_action('wp_ajax_sitecops_scan_plugins', 'svs_sitecops_xhr_scan_plugins_callback');
